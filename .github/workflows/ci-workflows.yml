name: CI/CD

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Build Backend
        run: |
          BACKEND_IMAGE=${{ secrets.DOCKER_USER }}/myapp-backend
          docker build -t $BACKEND_IMAGE:${{ github.run_number }} ./backend
          docker tag $BACKEND_IMAGE:${{ github.run_number }} $BACKEND_IMAGE:latest
          docker push $BACKEND_IMAGE:${{ github.run_number }}
          docker push $BACKEND_IMAGE:latest

      - name: Build Frontend
        run: |
          FRONTEND_IMAGE=${{ secrets.DOCKER_USER }}/myapp-frontend
          docker build -t $FRONTEND_IMAGE:${{ github.run_number }} ./frontend
          docker tag $FRONTEND_IMAGE:${{ github.run_number }} $FRONTEND_IMAGE:latest
          docker push $FRONTEND_IMAGE:${{ github.run_number }}
          docker push $FRONTEND_IMAGE:latest

  deploy:
    needs: build   # wait for build job to finish
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1   # change if needed

      - name: Deploy to ECS Fargate
        run: |
          # Define Docker Hub images
          BACKEND_IMAGE=${{ secrets.DOCKER_USER }}/myapp-backend:latest
          FRONTEND_IMAGE=${{ secrets.DOCKER_USER }}/myapp-frontend:latest

          # Replace placeholders in ECS task definition
          sed "s|<BACKEND_IMAGE>|$BACKEND_IMAGE|g; s|<FRONTEND_IMAGE>|$FRONTEND_IMAGE|g" ecs-task-def.json > ecs-task-def-updated.json

          # Register new task definition
          aws ecs register-task-definition \
            --cli-input-json file://ecs-task-def-updated.json

          # Force ECS to use the new task definition
          aws ecs update-service \
            --cluster myapp-cluster \
            --service myapp-service \
            --force-new-deployment

